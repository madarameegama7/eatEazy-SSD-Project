generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model carts {
  cartid       Int          @id @default(autoincrement()) @map("cartid")
  userid       Int          @map("userid")
  restaurantid Int          @map("restaurantid")
  cartitems    cartitems[]
  status       cartstatus   @default(ACTIVE) @map("status")
  createdat    DateTime     @default(now())  @map("createdat")
  updatedat    DateTime     @updatedAt       @map("updatedat")

  @@map("carts")
}

model cartitems {
  cartitemsid Int     @id @default(autoincrement()) @map("cartitemsid")
  cartid      Int     @map("cartid")
  menuitemid  Int     @map("menuitemid")
  quantity    Int     @default(1) @map("quantity")
  price       Float   @map("price")

  cart carts @relation(fields: [cartid], references: [cartid])

  @@map("cartitems")
}

model orders {
  orderid      Int            @id @default(autoincrement()) @map("orderid")
  userid       Int            @map("userid")
  restaurantid Int            @map("restaurantid")
  cartid       Int            @map("cartid")
  items        orderitems[]
  totalamount  Float          @map("totalamount")
  status       paymentstatus  @default(Pending) @map("status")
  createdat    DateTime       @default(now())   @map("createdat")
  updatedat    DateTime       @updatedAt        @map("updatedat")

  @@map("orders")
}

model orderitems {
  orderitemsid Int     @id @default(autoincrement()) @map("orderitemsid")
  orderid      Int     @map("orderid")
  menuitemid   Int     @map("menuitemid")
  quantity     Int     @map("quantity")
  price        Float   @map("price")

  order orders @relation(fields: [orderid], references: [orderid])

  @@map("orderitems")
}

enum cartstatus {
  ACTIVE
  COMPLETED
}

enum paymentstatus {
  Pending
  Completed
  Failed
}
